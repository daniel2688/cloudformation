AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Section 3 Activity template. 
  It launches a VPC with public and private subnets, 
  a web server EC2 instance in the public subnet 
  and a security group attached to this EC2 instance.

Parameters:
  InstanceType:
    Type: String 
    AllowedValues:
      - t2.nano
      - t2.micro 
      - t2.small
    Default: t2.micro
    
  ImageId:
    Type: AWS::EC2::Image::Id
    Description: "Image ID in AWS Region"
    Default: ami-0fad7378adf284ce0

  EbsVolumeSize:
    Type: Number
    Description: "Volume size in GiB"

  KeyPairName:
    Type: "AWS::EC2::KeyPair::KeyName"

  VpcCidrBlocks:
    Type: CommaDelimitedList
    Description: "vpc, public subnet, private subnet"

  TagsEnvironment:
    Type: CommaDelimitedList
    Description: "vpc, public subnet, private subnet"
    Default: prod, prod, test

  SubnetAZ:
    Type: CommaDelimitedList
    Description: "AZ for public and private subnets"
    Default: us-east-1a, us-east-1b

Resources:
  # VPC Resource
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Select [ 0, !Ref VpcCidrBlocks ]
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-vpc'
        - Key: Environment
          Value: !Select [ 0, !Ref TagsEnvironment ]

  # Public Subnet Resource
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !Ref SubnetAZ ]
      CidrBlock: !Select [ 1, !Ref VpcCidrBlocks ]
      MapPublicIpOnLaunch: true
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-public-subnet"
        - Key: Environment
          Value: !Select [ 1, !Ref TagsEnvironment ]

  # Private Subnet Resource
  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 1, !Ref SubnetAZ ]
      CidrBlock: !Select [ 2, !Ref VpcCidrBlocks ]
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-private-subnet"
        - Key: Environment
          Value: !Select [ 2, !Ref TagsEnvironment ]

  # Public Route Table Resource
  PublicRouteTable:
    Type: AWS::EC2::RouteTable 
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: Public Route Table

  # Private Route Table Resource
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable 
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: Private Route Table

  # Internet Gateway Resource
  InternetGateway:
    Type: AWS::EC2::InternetGateway

  # VPC Gateway Attachment Resource
  VpcGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref InternetGateway

  # Internet Route Resource for Public Route Table
  InternetRoute:
    Type: AWS::EC2::Route 
    DependsOn:
      - VpcGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      GatewayId: !Ref InternetGateway
      DestinationCidrBlock: 0.0.0.0/0

  # Public Subnet Route Table Association
  PublicSubnetRouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet

  # Private Subnet Route Table Association
  PrivateSubnetRouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet

  # Web Server Instance Resource
  WebServerInstance:
    Type: AWS::EC2::Instance 
    DependsOn:
      - InternetRoute
      - PublicSubnetRouteTableAssoc
    Properties:
      InstanceType: !Ref InstanceType 
      SubnetId: !Ref PublicSubnet 
      ImageId: !Ref ImageId
      KeyName: !Ref KeyPairName 
      SecurityGroupIds:
        - !Ref WebServerSecurityGroup
      BlockDeviceMappings:
        - 
          DeviceName: /dev/sdf
          Ebs:
            VolumeSize: !Ref EbsVolumeSize
            VolumeType: gp2
      Tags:
        - Key: Name
          Value: Web Server

  # Web Server Security Group Resource
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup 
    Properties:
      GroupDescription: "Activity security group"
      VpcId: !Ref Vpc
      SecurityGroupIngress:
        # HTTP rule
        - CidrIp: 0.0.0.0/0 
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
        # SSH rule
        - CidrIp: 0.0.0.0/0 
          IpProtocol: tcp
          FromPort: 22 
          ToPort: 22
